---
- name: Provision AWS EC2 instance
  hosts: localhost
  any_errors_fatal: true
  connection: local
  gather_facts: false
  user: root
  tasks:
#    - fail: msg="The minimum Ansible version required to run is 2.0.1. To upgrade run 'sudo pip install --upgrade ansible'."
#      when: ansible_version.major|int != 2 and ansible_version.minor|int < 0 and ansible_version.revision|int < 1

    - name: Create a security group
      local_action:
        module: ec2_group
        name: "{{ pmb_ec2_security_group_name }}"
        description: Playmobox security group
        region: "{{ pmb_ec2_region }}"
        rules:
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 443
            to_port: 443
            cidr_ip: 0.0.0.0/0
        rules_egress:
          - proto: all
            cidr_ip: 0.0.0.0/0
      register: security_group

    - name: Provision {{ pmb_ec2_count }} instances with customer id {{ pmb_ec2_customer_id }}
      local_action:
        module: ec2
        # assign_public_ip: "{{ pmb_ec2_assign_public_ip | default(true) }}"
        count: "{{ pmb_ec2_count | default(1) }}"
        ebs_optimized: "{{ pmb_ec2_ebs_optimized | default(false) }}"
        # groups: "{{ pmb_ec2_security_groups }}"
        group_id: "{{ security_group.group_id }}"
        instance_type: "{{ pmb_ec2_instance_type | default('t2.micro') }}"
        instance_profile_name:  "{{ pmb_ec2_instance_profile_name | default('')}}"
        user_data: "{{ pmb_ec2_user_data | default(omit) }}"
        image: "{{ pmb_ec2_ami_id }}"
        key_name: "{{ pmb_ec2_key_name | default(omit) }}"
        monitoring: "{{ pmb_ec2_monitoring | default(false) }}"
        region: "{{ pmb_ec2_region }}"
        # vpc_subnet_id: "{{ pmb_ec2_vpc_subnet_id }}"
        instance_tags: "{{ pmb_ec2_instance_tags }}"
        private_ip: "{{ pmb_ec2_private_ip | default ('') }}"
        state: "{{ pmb_ec2_state | default('present') }}"
        wait: true
        volumes:
          - device_name: /dev/sda1
            volume_type: gp2
            volume_size: "{{ pmb_ec2_volume_size | default(8) }}"
            delete_on_termination: "{{ pmb_ec2_delete_on_termination | default(true) }}"
      register: ec2

    - debug:
        var: ec2

    - add_host:
        name: "{{ item.public_ip }}"
        groups: launched,production
        pmb_ec2_region: "{{ pmb_ec2_region }}"
        pmb_ec2_customer_id: "{{ pmb_ec2_customer_id }}"
        pmb_ec2_instance_type: "{{ pmb_ec2_instance_type}}"
        pmb_ec2_ip_address: "{{ item.public_ip }}"
      args: {ec2: "{{ ec2 }}"}
      with_items: "{{ ec2.instances }}"

    - name: Wait for the instances to boot by checking the ssh port
      local_action: wait_for
                    host={{item.public_ip}}
                    port=22
                    delay=15
                    timeout=60
                    state=started
      with_items: "{{ ec2.instances }}"


- name: Update hostnames
  hosts: launched:&production
  any_errors_fatal: true
  gather_facts: false
  remote_user: "{{ pmb_remote_user | default('root') }}"
  tasks:
    - name: change hostname
      hostname:
        name: "{{ pmb_hostname }}"
      when:
        - pmb_ec2_count == 1
        - pmb_hostname is defined
        - pmb_hostname|length > 0
      become: yes

    - name: change for each instance the hostname
      block:
        - hostname:
            name: "{{ pmb_hostname }}-{{ play_hosts.index(inventory_hostname) | int + 1 }}"
          when:
            - pmb_ec2_count > 1
            - pmb_hostname is defined
            - pmb_hostname|length > 0
          become: yes
          register: hostname_command
          ignore_errors: true
      rescue:
        - debug:
            var: hostname_command

    - name: "change for target instance the hostname in /etc/hosts"
      lineinfile:
        dest: /etc/hosts
        regexp: '^127\.0\.0\.1[ \t]+localhost'
        line: "127.0.0.1 localhost {{ pmb_hostname }}"
        state: present
      when:
        - pmb_ec2_count == 1
        - pmb_hostname is defined
        - pmb_hostname|length > 0
      become: yes

    - name: "change for each instance the hostname in /etc/hosts"
      block:
        - lineinfile:
            dest: /etc/hosts
            regexp: '^127\.0\.0\.1[ \t]+localhost'
            line: "127.0.0.1 localhost {{ pmb_hostname }}-{{ play_hosts.index(inventory_hostname) | int + 1 }}"
            state: present
          when:
            - pmb_ec2_count > 1
            - pmb_hostname is defined
            - pmb_hostname|length > 0
          become: yes
          register: lineinfile_result
          ignore_errors: true
      rescue:
        - debug:
            var: lineinfile_result
